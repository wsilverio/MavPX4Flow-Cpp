Struct Common_Types{
            /*
            (0)Heartbeat | (1)Data_transmission_handshake | (2)Encapsulated_data | (3)Optical_flow
            (4)Optical_flow_rad | (5)Debug_vect | (6)Named_value_float | (7)Named_value_int
            */
    
            // Type: uint64_t
            // (0) ---
            // (1) ---
            // (2) ---
            // (3) time_usec
            // (4) time_usec
            // (5) time_usec
            // (6) ---
            // (7) ---
            std::vector<uint64_t> data_uint64_t;
    
            // Type: int32_t
            // (0) ---
            // (1) ---
            // (2) ---
            // (3) ---
            // (4) ---
            // (5) ---
            // (6) ---
            // (7) value
            std::vector<int32_t> data_int32_t;
    
            // Type: 
            // (0) custom_mode
            // (1) size
            // (2) ---
            // (3) ---
            // (4) integration_time_us, time_delta_distance_us
            // (5) ---
            // (6) time_boot_ms
            // (7) time_boot_ms
            std::vector<uint32_t> data_uint32_t;
    
            // Type: int16_t
            // (0) ---
            // (1) ---
            // (2) ---
            // (3) flow_x, flow_y
            // (4) temperature
            // (5) ---
            // (6) ---
            // (7) ---
            std::vector<int16_t> data_int16_t;
    
            // Type: uint16_t
            // (0) ---
            // (1) width, height, packets
            // (2) seqnr
            // (3) ---
            // (4) ---
            // (5) ---
            // (6) ---
            // (7) ---
            std::vector<uint16_t> data_uint16_t;
    
            // Type: uint8_t
            // (0) type, autopilot, base_mode, system_status, mavlink_version
            // (1) type, payload, jpg_quality
            // (2) data[253]
            // (3) sensor_id, quality
            // (4) sensor_id, quality
            // (5) ---
            // (6) ---
            // (7) ---
            std::vector<uint8_t> data_uint8_t;
            uint8_t data_array_uint8_t[253];
    
            // Type: float
            // (0) ---
            // (1) ---
            // (2) ---
            // (3) flow_comp_m_x, flow_comp_m_y, ground_distance
            // (4) integrated_x, integrated_y, integrated_xgyro, integrated_ygyro, integrated_zgyro, distance
            // (5) x, y, z
            // (6) value
            // (7) ---
            std::vector<float> data_float;
    
            // Type: char
            // (0) ---
            // (1) ---
            // (2) ---
            // (3) ---
            // (4) ---
            // (5) name[10]
            // (6) name[10]
            // (7) name[10]
            char data_char[10];
            // std::vector<char> data_char;
        };